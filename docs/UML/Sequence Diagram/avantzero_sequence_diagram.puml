@startuml AvantZeroSequenceDiagram
title AvantZero Sequence Diagram

skinparam {
    title {
        FontColor #2b2b2b
        FontName Arial
        FontSize 20
    }
    participant {
        BackgroundColor #2f2f2f
        FontColor #fafafa
        BorderColor #fafafa
        FontSize 14
        FontName Arial
    }
    participantPadding 20
}


participant USIF
participant SYS
participant UTILS
participant PROJM
participant DATAGEN
participant NLEGEN
participant DANLY
participant DEPGEN

group BOOT [BOOT- AND\nINITIAL CHECKS]
    USIF -> SYS : init() 
    activate SYS #16ad8f
    SYS -> USIF : show_splash()
    ====DEPENDENCY CHECK====
    SYS --> DEPGEN : check_dependencies()
    activate UTILS #16ad8f
    activate PROJM #16ad8f
    activate DATAGEN #16ad8f
    activate NLEGEN #16ad8f
    activate DANLY #16ad8f
    activate DEPGEN #16ad8f
    alt SUCCESS
        DEPGEN --> SYS : True
        SYS -> USIF : update_splash()
        else FAILURE
            DEPGEN --> SYS: <b>ERR001</b>
            deactivate UTILS
            deactivate PROJM
            deactivate NLEGEN
            deactivate DATAGEN
            deactivate DANLY
            deactivate DEPGEN
            SYS -> USIF : remove_splash()
            SYS -x USIF : <b>ERR001 / EXIT</b>
    end
    ====PACKAGE CHECK====
    SYS -> SYS : check_packages()
    alt SUCCESS
        SYS -> USIF : remove_splash()
        SYS -> USIF : True
        else FAILURE
            SYS -> USIF : remove_splash()
            SYS -x USIF : <b>ERR002 / EXIT</b>
    end
    deactivate SYS
end


group MAIN [MAIN\nFUNCTIONALITY]
    USIF -> UTILS : boot_mame()
    activate UTILS #E21E00
    activate SYS #E21E00
    UTILS --> SYS : True / Text
    SYS --> USIF : Return Menu
    deactivate UTILS
    deactivate SYS
    
    ====PROJECT MANAGER====
    opt PROJECTMANAGER
        USIF -> PROJM: boot_projm()
        activate PROJM #3F7FD9
        alt No Projects Found
            PROJM -> PROJM : create_project()
            alt Project setup stopped
                PROJM -X USIF : <b>ERR003 / EXIT </b>
            end
        PROJM --> USIF : True
        else Projects Found
            PROJM -> PROJM : check_projects()
                alt Project check stopped
                    PROJM -X USIF : <b>ERR004 / EXIT </b>
                end
            PROJM --> USIF : True
        end
    opt CREATE PROJECT
        USIF --> PROJM : Function call
        PROJM -> PROJM : create_project()
        PROJM --> UTILS : Call Texts
        activate UTILS #3F7FD9
        UTILS --> SYS : Retrieve Text
        activate SYS #3F7FD9
        SYS --> USIF : Show Setup
        alt Project setup\n stopped
            PROJM -X USIF : <b>ERR003 / EXIT </b>
        end
        USIF --> PROJM : Send Data
        PROJM -> PROJM : create_structures()
        alt Permission\n Error
            PROJM -> SYS: <b>ERR004</b>
            SYS -x USIF : <b>ERR004 / EXIT</b>
            else Generic\n Error
                PROJM -> SYS : <b>ERR005</b>
                SYS -x USIF : <b>ERR005 / EXIT</b>
                end
            loop while len\n(name)> 30
                PROJM -x USIF: <b>ERR006</b>
                USIF -> PROJM : Retry
                PROJM -> PROJM : create_structures()
            end
        PROJM --> USIF : True
        deactivate UTILS
        deactivate SYS
    end
    opt VIEW PROJECT
        USIF -> PROJM : Function call
        PROJM -> PROJM : retrieve_proj_list()
        alt No Projects Found
            PROJM -> SYS : <b>ERR006</b>
            activate SYS #3F7FD9
            SYS -> USIF : <b>ERR006 / BACK</b>
            deactivate SYS
            else GENERIC ERROR
                activate SYS #3F7FD9
                PROJM -> SYS : <b>ERR005</b>
                deactivate SYS
                SYS -x USIF : <b>ERR005 / EXIT</b>  
        end
    end
    
    end

end
@enduml
